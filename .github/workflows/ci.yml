name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up JDK (if Java project)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Install dependencies & build
      - name: Build with Maven
        run: mvn clean install -DskipTests=true

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Unit Tests
        run: mvn test

  security-scan:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # CodeQL Security Scan
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      # Trivy Docker Security Scan
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          severity: CRITICAL,HIGH
          ignore-unfixed: true

  code-quality:
    runs-on: ubuntu-latest
    needs: security-scan

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Example: SonarCloud Scan
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.1.1
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    needs: code-quality

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # Build Docker image
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/myapp:latest .

      # Push Docker image
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/myapp:latest
